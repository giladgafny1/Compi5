declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.zero_division = constant [23 x i8] c"Error division by zero\00"

define void @printi(i32) {
  %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
  call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
  ret void
}

define void @print(i8*) {
  %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
  call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
  ret void
}

define void @division_by_zero(i32) {
  %is_zero = icmp eq i32 %0, 0
  br i1 %is_zero, label %error_label, label %ok_label
  ok_label:
      ret void
  error_label:
      %ptr = getelementptr [23 x i8], [23 x i8]* @.zero_division, i32 0, i32 0
      call void @print(i8* %ptr)
      call void @exit(i32 0)
      ret void
}

define void @main(){
%var0 = alloca i32, i32 50
br label %label_36
label_33:
%var1 = add i32 3, 0
br label %label_48
label_36:
%var2 = add i32 4, 0
br label %label_39
label_39:
%var3 = add i32 5, 0
br label %label_42
label_42:
%var4 = icmp slt  i32 %var2, %var3
br i1 %var4, label %label_33, label %label_45
label_45:
%var5 = add i32 9, 0
br label %label_48
label_48:
%var7 = phi i32 [ 1, %label_33], [0, %label_45]
%var8 = getelementptr i32, i32* %var0, i32 0
store i32 %var7, i32* %var8
br label %label_53
label_53:
%var10 = getelementptr i32, i32* %var0, i32 0
%var9 = load i32, i32* %var10
br label %label_57
label_57:
%var11 = add i32 0, 0
br label %label_60
label_60:
call void @division_by_zero(i32 %var11)
%var12 = sdiv i32 %var9, %var11
br label %label_64
label_64:
%var13 = getelementptr i32, i32* %var0, i32 0
store i32 %var12, i32* %var13
br label %label_68
label_68:
ret void
br label %label_71
label_71:
ret void
}